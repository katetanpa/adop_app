{"version":3,"file":"static/js/584.9d2a8b12.chunk.js","mappings":"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","sources":["layout/footer/Footer.js","layout/nav/NavUserMenu.js","layout/nav/notifications/Notifications.js","layout/nav/search/SearchInput.js","layout/nav/search/SearchModal.js","layout/nav/NavIconMenu.js","layout/nav/main-menu/MainMenuItems.js","layout/nav/main-menu/MainMenu.js","hooks/useWindowScroll.js","hooks/useWindowSize.js","layout/nav/main-menu/helper.js","layout/nav/NavLogo.js","components/scrollspy/ScrollspyContent.js","components/scrollspy/ScrollspyMobile.js","layout/nav/NavMobileButtons.js","layout/nav/Nav.js","layout/right-buttons/SettingsModal.js","layout/right-buttons/RightButtons.js","layout/nav/sidebar-menu/SidebarMenuItems.js","layout/nav/sidebar-menu/SidebarMenu.js","layout/Layout.js","App.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport { Container, Row, Col, Breadcrumb } from 'react-bootstrap';\n\nconst Footer = () => {\n  useEffect(() => {\n    document.documentElement.setAttribute('data-footer', 'true');\n    return () => {\n      document.documentElement.removeAttribute('data-footer');\n    };\n  }, []);\n\n  return (\n    <footer>\n      <div className=\"footer-content\">\n        <Container>\n          <Row>\n            <Col xs=\"12\" sm=\"6\">\n              <p className=\"mb-0 text-muted text-medium\">Kate Tan Product 2022</p>\n            </Col>\n            <Col sm=\"6\" className=\"d-none d-sm-block\">\n              <Breadcrumb className=\"pt-0 pe-0 mb-0 float-end\">\n                <Breadcrumb.Item className=\"mb-0 text-medium\" href=\"https://miro.com/app/board/uXjVP3BUQKc=/?share_link_id=46776513069\" linkProps={{ className: 'btn-link' }}>\n                  Guidelines: Monitor Performances\n                </Breadcrumb.Item>\n                <Breadcrumb.Item className=\"mb-0 text-medium\" href=\"#/\" linkProps={{ className: 'btn-link' }}>\n                  Guidelines: Troubleshooting Ad Units\n                </Breadcrumb.Item>\n              </Breadcrumb>\n            </Col>\n          </Row>\n        </Container>\n      </div>\n    </footer>\n  );\n};\n\nexport default React.memo(Footer);\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport { Col, Dropdown, Row } from 'react-bootstrap';\nimport { MENU_PLACEMENT } from 'constants.js';\nimport CsLineIcons from 'cs-line-icons/CsLineIcons';\nimport { layoutShowingNavMenu } from 'layout/layoutSlice';\n\nconst NavUserMenuContent = () => (\n  <div>\n    <Row className=\"mb-1 ms-0 me-0\">\n      <ul className=\"list-unstyled\">\n          <li>\n            <a href=\"https://docs.google.com/spreadsheets/d/14sye2sr4-tV_Ic3TCd-ETpr-FtumUDDg3-PLZIzXvWQ/edit#gid=0\">\n              <CsLineIcons icon=\"help\" className=\"me-2\" size=\"17\" /> <span className=\"align-middle\">Data Input</span>\n            </a>\n          </li>\n          <li>\n            <a href=\"https://miro.com/app/board/uXjVP3S4AH0=/\">\n              <CsLineIcons icon=\"file-text\" className=\"me-2\" size=\"17\" /> <span className=\"align-middle\">Docs & Guideline</span>\n            </a>\n          </li>\n      </ul>\n    </Row>\n  </div>\n);\n\nconst NavUserMenuDropdownToggle = React.memo(\n  React.forwardRef(({ onClick, expanded = false, user = {} }, ref) => (\n    <a\n      href=\"#/!\"\n      ref={ref}\n      className=\"d-flex user position-relative\"\n      data-toggle=\"dropdown\"\n      aria-expanded={expanded}\n      onClick={(e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        onClick(e);\n      }}\n    >\n      <img className=\"profile\" alt={user.name} src={user.thumb} />\n      <div className=\"name\">{user.name}</div>\n    </a>\n  ))\n);\n\n// Dropdown needs access to the DOM of the Menu to measure it\nconst NavUserMenuDropdownMenu = React.memo(\n  React.forwardRef(({ style, className }, ref) => {\n    return (\n      <div ref={ref} style={style} className={classNames('dropdown-menu dropdown-menu-end user-menu wide', className)}>\n        <NavUserMenuContent />\n      </div>\n    );\n  })\n);\n\nNavUserMenuDropdownMenu.displayName = 'NavUserMenuDropdownMenu';\n\nconst MENU_NAME = 'NavUserMenu';\n\nconst NavUserMenu = () => {\n  const dispatch = useDispatch();\n  const {\n    placementStatus: { view: placement },\n    behaviourStatus: { behaviourHtmlData },\n    attrMobile,\n    attrMenuAnimate,\n  } = useSelector((state) => state.menu);\n\n  const { isLogin, currentUser } = useSelector((state) => state.auth);\n  const { color } = useSelector((state) => state.settings);\n  const { showingNavMenu } = useSelector((state) => state.layout);\n\n  const onToggle = (status, event) => {\n    if (event && event.stopPropagation) event.stopPropagation();\n    else if (event && event.originalEvent && event.originalEvent.stopPropagation) event.originalEvent.stopPropagation();\n    dispatch(layoutShowingNavMenu(status ? MENU_NAME : ''));\n  };\n\n  useEffect(() => {\n    dispatch(layoutShowingNavMenu(''));\n    // eslint-disable-next-line\n  }, [attrMenuAnimate, behaviourHtmlData, attrMobile, color]);\n\n  if (!isLogin) {\n    return <></>;\n  }\n  return (\n    <Dropdown as=\"div\" bsPrefix=\"user-container d-flex\" onToggle={onToggle} show={showingNavMenu === MENU_NAME} drop=\"down\">\n      <Dropdown.Toggle as={NavUserMenuDropdownToggle} user={currentUser} />\n      <Dropdown.Menu\n        as={NavUserMenuDropdownMenu}\n        className=\"dropdown-menu dropdown-menu-end user-menu wide\"\n        popperConfig={{\n          modifiers: [\n            {\n              name: 'offset',\n              options: {\n                offset: () => {\n                  if (placement === MENU_PLACEMENT.Horizontal) {\n                    return [0, 7];\n                  }\n                  if (window.innerWidth < 768) {\n                    return [-84, 7];\n                  }\n\n                  return [-78, 7];\n                },\n              },\n            },\n          ],\n        }}\n      />\n    </Dropdown>\n  );\n};\nexport default React.memo(NavUserMenu);\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { Dropdown } from 'react-bootstrap';\nimport classNames from 'classnames';\nimport { OverlayScrollbarsComponent } from 'overlayscrollbars-react';\nimport { MENU_PLACEMENT } from 'constants.js';\nimport CsLineIcons from 'cs-line-icons/CsLineIcons';\nimport { layoutShowingNavMenu } from 'layout/layoutSlice';\nimport { fetchNotifications } from './notificationSlice';\n\nconst NotificationsDropdownToggle = React.memo(\n  React.forwardRef(({ onClick, expanded = false }, ref) => (\n    <a\n      ref={ref}\n      href=\"#/\"\n      className=\"notification-button\"\n      data-toggle=\"dropdown\"\n      aria-expanded={expanded}\n      onClick={(e) => {\n        e.preventDefault();\n        e.stopPropagation();\n        onClick(e);\n      }}\n    >\n      <div className=\"position-relative d-inline-flex\">\n        <CsLineIcons icon=\"bell\" size=\"18\" />\n        <span className=\"position-absolute notification-dot rounded-xl\" />\n      </div>\n    </a>\n  ))\n);\nconst NotificationItem = ({ img = '', link = '', detail = '' }) => (\n  <li className=\"mb-3 pb-3 border-bottom border-separator-light d-flex\">\n    <img src={img} className=\"me-3 sw-4 sh-4 rounded-xl align-self-center\" alt=\"notification\" />\n    <div className=\"align-self-center\">\n      <NavLink to={link} activeClassName=\"\">\n        {detail}\n      </NavLink>\n    </div>\n  </li>\n);\n\nconst NotificationsDropdownMenu = React.memo(\n  React.forwardRef(({ style, className, labeledBy, items }, ref) => {\n    return (\n      <div ref={ref} style={style} className={classNames('wide notification-dropdown scroll-out', className)} aria-labelledby={labeledBy}>\n        <OverlayScrollbarsComponent\n          options={{\n            scrollbars: { autoHide: 'leave', autoHideDelay: 600 },\n            overflowBehavior: { x: 'hidden', y: 'scroll' },\n          }}\n          className=\"scroll\"\n        >\n          <ul className=\"list-unstyled border-last-none\">\n            {items.map((item, itemIndex) => (\n              <NotificationItem key={`notificationItem.${itemIndex}`} detail={item.detail} link={item.link} img={item.img} />\n            ))}\n          </ul>\n        </OverlayScrollbarsComponent>\n      </div>\n    );\n  })\n);\nNotificationsDropdownMenu.displayName = 'NotificationsDropdownMenu';\n\nconst MENU_NAME = 'Notifications';\nconst Notifications = () => {\n  const dispatch = useDispatch();\n\n  const {\n    placementStatus: { view: placement },\n    behaviourStatus: { behaviourHtmlData },\n    attrMobile,\n    attrMenuAnimate,\n  } = useSelector((state) => state.menu);\n  const { color } = useSelector((state) => state.settings);\n  const { items } = useSelector((state) => state.notification);\n  const { showingNavMenu } = useSelector((state) => state.layout);\n\n  useEffect(() => {\n    dispatch(fetchNotifications());\n    return () => {};\n    // eslint-disable-next-line\n  }, []);\n\n  const onToggle = (status, event) => {\n    if (event && event.stopPropagation) event.stopPropagation();\n    else if (event && event.originalEvent && event.originalEvent.stopPropagation) event.originalEvent.stopPropagation();\n    dispatch(layoutShowingNavMenu(status ? MENU_NAME : ''));\n  };\n\n  useEffect(() => {\n    dispatch(layoutShowingNavMenu(''));\n    // eslint-disable-next-line\n  }, [attrMenuAnimate, behaviourHtmlData, attrMobile, color]);\n\n  if (items && items.length > 0) {\n    return (\n      <Dropdown\n        as=\"li\"\n        bsPrefix=\"list-inline-item\"\n        onToggle={onToggle}\n        show={showingNavMenu === MENU_NAME}\n        align={placement === MENU_PLACEMENT.Horizontal ? 'end' : 'start'}\n      >\n        <Dropdown.Toggle as={NotificationsDropdownToggle} />\n        <Dropdown.Menu\n          as={NotificationsDropdownMenu}\n          items={items}\n          popperConfig={{\n            modifiers: [\n              {\n                name: 'offset',\n                options: {\n                  offset: () => {\n                    if (placement === MENU_PLACEMENT.Horizontal) {\n                      return [0, 7];\n                    }\n                    if (window.innerWidth < 768) {\n                      return [-168, 7];\n                    }\n                    return [-162, 7];\n                  },\n                },\n              },\n            ],\n          }}\n        />\n      </Dropdown>\n    );\n  }\n  return <></>;\n};\nexport default React.memo(Notifications);\n","import React, { useMemo, useState, useEffect, useRef } from 'react';\nimport classNames from 'classnames';\nimport FuzzyHighlighter from 'react-fuzzy-highlighter';\nimport { useHistory } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { getSearchItems } from 'routing/helper';\nimport routesAndMenuItems from 'routes.js';\n\nconst RESULT_LIMIT = 10;\n\nconst SearchInput = ({ show, setShow }) => {\n  const history = useHistory();\n  const searchInput = useRef(null);\n  const [data, setData] = useState(null);\n  const [query, setQuery] = useState('');\n  const [selectedIndex, setSelectedIndex] = useState(null);\n  const resultCount = React.useRef(0);\n  const selectedItem = React.useRef({});\n  const mySelectedIndexRef = React.useRef(selectedIndex);\n  const setMySelectedIndex = (currenData) => {\n    mySelectedIndexRef.current = currenData;\n    setSelectedIndex(currenData);\n  };\n  const { isLogin, currentUser } = useSelector((state) => state.auth);\n\n  const routes = useMemo(\n    () =>\n      getSearchItems({\n        data: routesAndMenuItems,\n        isLogin,\n        userRole: currentUser.role,\n      })(),\n    [isLogin, currentUser]\n  );\n\n  const onResultClick = (path) => {\n    if (path) {\n      setShow(false);\n      history.push(path);\n    }\n  };\n\n  const onKeyDown = (e) => {\n    if (![38, 40, 13].includes(e.keyCode)) {\n      return;\n    }\n    const rCount = resultCount.current;\n    const sIndex = mySelectedIndexRef.current;\n    if (rCount <= 0) return;\n\n    if (sIndex === null) {\n      setMySelectedIndex(0);\n      return;\n    }\n\n    if (e.keyCode === 38) {\n      // up\n      setMySelectedIndex(sIndex <= 0 ? rCount - 1 : sIndex - 1);\n    } else if (e.keyCode === 40) {\n      // down\n      setMySelectedIndex(sIndex >= rCount - 1 ? 0 : sIndex + 1);\n    } else {\n      // enter\n      const sCurrent = selectedItem.current;\n      if (sCurrent) {\n        onResultClick(sCurrent.path);\n      }\n    }\n  };\n\n  useEffect(() => {\n    setData(routes);\n    document.addEventListener('keydown', onKeyDown);\n    return () => {\n      document.removeEventListener('keydown', onKeyDown);\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (show) {\n      setTimeout(() => {\n        searchInput.current.focus();\n      }, 0);\n    } else {\n      setQuery('');\n    }\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [show]);\n\n  useEffect(() => {\n    setMySelectedIndex(null);\n    resultCount.current = 0;\n    selectedItem.current = {};\n    // eslint-disable-next-line\n  }, [query]);\n\n  if (data) {\n    return (\n      <>\n        <input\n          ref={searchInput}\n          id=\"searchPagesInput\"\n          className=\"form-control form-control-xl borderless ps-0 pe-0 mb-1 auto-complete\"\n          type=\"text\"\n          autoComplete=\"off\"\n          onChange={(e) => setQuery(e.target.value)}\n          value={query}\n          placeholder=\"Search for Pages\"\n          autoFocus\n        />\n        {query.length > 0 && (\n          <FuzzyHighlighter\n            query={query}\n            data={data}\n            options={{\n              shouldSort: true,\n              includeMatches: true,\n              threshold: 0.6,\n              location: 0,\n              distance: 100,\n              maxPatternLength: 32,\n              minMatchCharLength: 1,\n              keys: ['label'],\n            }}\n          >\n            {({ formattedResults, results }) => {\n              resultCount.current = Math.min(formattedResults.length, RESULT_LIMIT);\n              selectedItem.current = selectedIndex === null ? {} : results[selectedIndex].item;\n              return results.length > 0 ? (\n                <ul id=\"searchPagesResults\" className=\"auto-complete-result\">\n                  {formattedResults.slice(0, RESULT_LIMIT).map((formattedResult, resultIndex) => (\n                    <li\n                      key={resultIndex}\n                      onClick={() => onResultClick(formattedResult.item.path)}\n                      className={classNames('auto-complete-result-item', {\n                        autoComplete_selected: selectedIndex === resultIndex,\n                      })}\n                    >\n                      {Array.isArray(formattedResult.formatted.label) ? (\n                        <p className=\"mb-0\">\n                          {formattedResult.formatted.label.map((t, tIndex) => {\n                            if (t.isHighlighted) {\n                              return (\n                                <span key={tIndex} className=\"autoComplete_highlighted\">\n                                  {t.text}\n                                </span>\n                              );\n                            }\n                            return <span key={tIndex}>{t.text}</span>;\n                          })}\n                        </p>\n                      ) : (\n                        <p className=\"mb-0\">{formattedResult.formatted.label}</p>\n                      )}\n                      <p className=\"text-small text-muted mb-0 \">{formattedResult.item.path}</p>\n                    </li>\n                  ))}\n                </ul>\n              ) : (\n                <ul id=\"searchPagesResults\" className=\"auto-complete-result\">\n                  <li className=\"no_resulst\">No Results</li>\n                </ul>\n              );\n            }}\n          </FuzzyHighlighter>\n        )}\n      </>\n    );\n  }\n  return <></>;\n};\n\nexport default SearchInput;\n","import React from 'react';\nimport { Modal } from 'react-bootstrap';\nimport CsLineIcons from 'cs-line-icons/CsLineIcons';\nimport SearchInput from './SearchInput';\n\nconst SearchModal = ({ show, setShow }) => {\n  return (\n    <Modal id=\"searchPagesModal\" className=\"modal-under-nav modal-search modal-close-out\" size=\"lg\" show={show} onHide={() => setShow(false)}>\n      <Modal.Header className=\"border-0 p-0\" />\n      <Modal.Body className=\"ps-5 pe-5 pb-0 border-0\">\n        <SearchInput show={show} setShow={setShow} />\n      </Modal.Body>\n      <Modal.Footer className=\"border-top justify-content-start ps-5 pe-5 pb-3 pt-3 border-0\">\n        <span className=\"text-alternate d-inline-block m-0 me-3\">\n          <CsLineIcons icon=\"arrow-bottom\" size=\"15\" className=\"text-alternate align-middle me-1\" />\n          <span className=\"align-middle text-medium\">Navigate</span>\n        </span>\n        <span className=\"text-alternate d-inline-block m-0 me-3\">\n          <CsLineIcons icon=\"arrow-bottom-left\" size=\"15\" className=\"text-alternate align-middle me-1\" />\n          <span className=\"align-middle text-medium\">Select</span>\n        </span>\n      </Modal.Footer>\n    </Modal>\n  );\n};\n\nexport default SearchModal;\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MENU_BEHAVIOUR } from 'constants.js';\nimport CsLineIcons from 'cs-line-icons/CsLineIcons';\nimport { settingsChangeColor } from 'settings/settingsSlice';\nimport IconMenuNotifications from './notifications/Notifications';\nimport SearchModal from './search/SearchModal';\nimport { menuChangeBehaviour } from './main-menu/menuSlice';\n\nconst NavIconMenu = () => {\n  const { pinButtonEnable, behaviour } = useSelector((state) => state.menu);\n  const { color } = useSelector((state) => state.settings);\n  const dispatch = useDispatch();\n\n  const onPinButtonClick = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    if (pinButtonEnable) {\n      dispatch(menuChangeBehaviour(behaviour === MENU_BEHAVIOUR.Pinned ? MENU_BEHAVIOUR.Unpinned : MENU_BEHAVIOUR.Pinned));\n    }\n    return false;\n  };\n  const onDisabledPinButtonClick = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const onLightDarkModeClick = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    dispatch(settingsChangeColor(color.includes('light') ? color.replace('light', 'dark') : color.replace('dark', 'light')));\n  };\n  const [showSearchModal, setShowSearchModal] = useState(false);\n\n  const onSearchIconClick = (e) => {\n    e.preventDefault();\n    setShowSearchModal(true);\n  };\n\n  return (\n    <>\n      <ul className=\"list-unstyled list-inline text-center menu-icons\">\n        <li className=\"list-inline-item\">\n          <a href=\"#/\" onClick={onSearchIconClick}>\n            <CsLineIcons icon=\"search\" size=\"18\" />\n          </a>\n        </li>\n        <li className=\"list-inline-item\">\n          <a\n            href=\"#/\"\n            id=\"pinButton\"\n            onClick={pinButtonEnable ? onPinButtonClick : onDisabledPinButtonClick}\n            className={classNames('pin-button', { disabled: !pinButtonEnable })}\n          >\n            <CsLineIcons icon=\"lock-on\" size=\"18\" className=\"unpin\" />\n            <CsLineIcons icon=\"lock-off\" size=\"18\" className=\"pin\" />\n          </a>\n        </li>\n        <li className=\"list-inline-item\">\n          <a href=\"#/\" id=\"colorButton\" onClick={onLightDarkModeClick}>\n            <CsLineIcons icon=\"light-on\" size=\"18\" className=\"light\" />\n            <CsLineIcons icon=\"light-off\" size=\"18\" className=\"dark\" />\n          </a>\n        </li>\n        <IconMenuNotifications />\n      </ul>\n      <SearchModal show={showSearchModal} setShow={setShowSearchModal} />\n    </>\n  );\n};\n\nexport default React.memo(NavIconMenu);\n","import React, { useEffect, useState, memo, forwardRef, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Collapse, Dropdown } from 'react-bootstrap';\nimport { DEFAULT_SETTINGS } from 'config.js';\nimport { MENU_PLACEMENT } from 'constants.js';\nimport CsLineIcons from 'cs-line-icons/CsLineIcons';\nimport { layoutShowingNavMenu } from 'layout/layoutSlice';\nimport { menuChangeCollapseAll } from './menuSlice';\n\nconst HorizontalMenuDropdownToggle = memo(\n  forwardRef(({ children, onClick, href = '#', active = false }, ref) => (\n    <a\n      ref={ref}\n      className={classNames('dropdown-toggle', { active })}\n      data-toggle=\"dropdown\"\n      href={href}\n      onClick={(e) => {\n        e.preventDefault();\n        onClick(e);\n      }}\n    >\n      {children}\n    </a>\n  ))\n);\n\nconst MainMenuItem = memo(({ item, id, isSubItem = false, menuPlacement = DEFAULT_SETTINGS.MENU_PLACEMENT }) => {\n  const dispatch = useDispatch();\n  const dropdownMenuRef = useRef();\n  const { collapseAll } = useSelector((state) => state.menu);\n  const { showingNavMenu } = useSelector((state) => state.layout);\n  const { pathname } = useLocation();\n  const isActive = item.path.startsWith('#') ? false : pathname === item.path || pathname.indexOf(`${item.path}/`) > -1;\n\n  const [verticalMenuCollapseExpanded, setVerticalMenuCollapseExpanded] = useState(isActive);\n  const [horizontalDropdownIsOpen, setHorizontalDropdownIsOpen] = useState(false);\n\n  const getLabel = (icon, label) => (\n    <>\n      {icon && (\n        <>\n          <CsLineIcons icon={icon} size={18} className=\"cs-icon icon\" />{' '}\n        </>\n      )}\n      <span className=\"label\">{label}</span>\n    </>\n  );\n\n  const onToggleItem = (isOpen) => {\n    setHorizontalDropdownIsOpen(isOpen);\n  };\n\n  const onVerticalMenuCollapseClick = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n    setVerticalMenuCollapseExpanded(!verticalMenuCollapseExpanded);\n    dispatch(menuChangeCollapseAll(false));\n  };\n\n  const onHorizontalMenuDropdownToggleClick = () => {\n    onToggleItem(!horizontalDropdownIsOpen);\n    dispatch(layoutShowingNavMenu(''));\n  };\n\n  useEffect(() => {\n    if (showingNavMenu !== '' && horizontalDropdownIsOpen) {\n      onToggleItem(false);\n    }\n  }, [showingNavMenu, horizontalDropdownIsOpen]);\n\n  if (item.subs && menuPlacement === MENU_PLACEMENT.Horizontal && !item.megaParent) {\n    return (\n      <Dropdown as=\"li\" key={id} onToggle={onToggleItem} className={classNames({ mega: item.mega })} show={horizontalDropdownIsOpen}>\n        <Dropdown.Toggle as={HorizontalMenuDropdownToggle} onClick={onHorizontalMenuDropdownToggleClick} href={item.path} active={isActive}>\n          {getLabel(item.icon, item.label)}\n        </Dropdown.Toggle>\n        <Dropdown.Menu\n          ref={dropdownMenuRef}\n          renderOnMount\n          as=\"ul\"\n          align=\"left\"\n          className={classNames('opacityIn', {\n            'row align-items-start': item.mega,\n            [`row-cols-${item.subs.length}`]: item.mega,\n          })}\n          popperConfig={{\n            strategy: item.mega ? 'fixed' : 'absolute',\n            modifiers: [\n              {\n                name: 'computeStyles',\n                options: {\n                  gpuAcceleration: true, // true by default\n                  adaptive: false,\n                  roundOffsets: ({ x, y }) => {\n                    if (item.mega) {\n                      try {\n                        return {\n                          x: Math.round((window.innerWidth - dropdownMenuRef.current.clientWidth) / 2 - 8),\n                          y: y + 7,\n                        };\n                      } catch (e) {\n                        console.warn('error:', e);\n                      }\n                    }\n                    if (isSubItem) {\n                      return { x, y: y - 34 };\n                    }\n                    return { x, y: y + 2 };\n                  },\n                },\n              },\n            ],\n          }}\n        >\n          <MainMenuItems menuItems={item.subs} menuPlacement={menuPlacement} isSubItem />\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n  }\n  if (item.subs && menuPlacement === MENU_PLACEMENT.Horizontal) {\n    return (\n      <li className=\"dropdown col d-flex flex-column\">\n        <NavLink to={item.path} className={classNames('dropdown-toggle', { active: isActive })}>\n          {getLabel(item.icon, item.label)}\n        </NavLink>\n        <ul>\n          <MainMenuItems menuItems={item.subs} menuPlacement={menuPlacement} isSubItem />\n        </ul>\n      </li>\n    );\n  }\n  if (item.subs && menuPlacement === MENU_PLACEMENT.Vertical) {\n    return (\n      <li>\n        <a\n          href={item.path}\n          data-bs-toggle=\"collapse\"\n          role=\"button\"\n          className={classNames({ active: isActive })}\n          aria-expanded={verticalMenuCollapseExpanded && !collapseAll}\n          onClick={onVerticalMenuCollapseClick}\n        >\n          {getLabel(item.icon, item.label)}\n        </a>\n        <Collapse in={verticalMenuCollapseExpanded && !collapseAll}>\n          <ul>\n            <MainMenuItems menuItems={item.subs} menuPlacement={menuPlacement} isSubItem />\n          </ul>\n        </Collapse>\n      </li>\n    );\n  }\n  if (item.isExternal) {\n    return (\n      <li key={id}>\n        <a href={item.path} target=\"_blank\" rel=\"noopener noreferrer\">\n          {getLabel(item.icon, item.label)}\n        </a>\n      </li>\n    );\n  }\n  if (!isSubItem || menuPlacement === MENU_PLACEMENT.Vertical) {\n    return (\n      <li>\n        <NavLink to={item.path} className={classNames({ active: isActive })} activeClassName=\"\">\n          {getLabel(item.icon, item.label)}\n        </NavLink>\n      </li>\n    );\n  }\n  if (menuPlacement === MENU_PLACEMENT.Horizontal && item.megaParent) {\n    return (\n      <li className=\"col d-flex flex-column\">\n        <NavLink to={item.path} className={classNames({ active: isActive })} activeClassName=\"\">\n          {getLabel(item.icon, item.label)}\n        </NavLink>\n      </li>\n    );\n  }\n  return (\n    <Dropdown.Item as=\"li\">\n      <NavLink to={item.path} className={classNames({ active: isActive })} activeClassName=\"\">\n        {getLabel(item.icon, item.label)}\n      </NavLink>\n    </Dropdown.Item>\n  );\n});\n\nMainMenuItem.displayName = 'MainMenuItem';\n\nconst MainMenuItems = React.memo(({ menuItems = [], menuPlacement = DEFAULT_SETTINGS.MENU_PLACEMENT, isSubItem = false }) =>\n  menuItems.map((item, index) => (\n    <MainMenuItem key={`menu.${item.path}.${index}`} id={item.path} item={item} menuPlacement={menuPlacement} isSubItem={isSubItem} />\n  ))\n);\n\nMainMenuItems.displayName = 'MainMenuItems';\n\nexport default React.memo(MainMenuItems);\n","import React, { useCallback, useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport { MENU_PLACEMENT, MENU_BEHAVIOUR } from 'constants.js';\nimport { OverlayScrollbarsComponent } from 'overlayscrollbars-react';\nimport { getMenuItems } from 'routing/helper';\nimport { useWindowSize } from 'hooks/useWindowSize';\nimport { useWindowScroll } from 'hooks/useWindowScroll';\nimport routesAndMenuItems from 'routes.js';\nimport { layoutShowingNavMenu } from 'layout/layoutSlice';\nimport MainMenuItems from './MainMenuItems';\nimport {\n  menuChangeAttrMenuAnimate,\n  menuChangeAttrMobile,\n  menuChangeBehaviourStatus,\n  menuChangeCollapseAll,\n  menuChangeNavClasses,\n  menuChangePinButtonEnable,\n  menuChangePlacementStatus,\n} from './menuSlice';\nimport { checkBehaviour, checkPlacement, isDeeplyDiffBehaviourStatus, isDeeplyDiffPlacementStatus } from './helper';\n\nconst MainMenu = () => {\n  const dispatch = useDispatch();\n  const { placement, behaviour, placementStatus, behaviourStatus, attrMobile, breakpoints, useSidebar } = useSelector((state) => state.menu);\n  const { isLogin, currentUser } = useSelector((state) => state.auth);\n  const scrolled = useWindowScroll();\n  const { width } = useWindowSize();\n\n  const menuItemsMemo = useMemo(\n    () =>\n      getMenuItems({\n        data: attrMobile && useSidebar ? routesAndMenuItems : routesAndMenuItems.mainMenuItems,\n        isLogin,\n        userRole: currentUser.role,\n      }),\n    [isLogin, currentUser, attrMobile, useSidebar]\n  );\n\n  useEffect(() => {\n    dispatch(menuChangeAttrMenuAnimate(''));\n    dispatch(layoutShowingNavMenu(''));\n\n    if (placementStatus.status === 2 || placementStatus.status === 4) {\n      // Switching back from the mobile menu layout fast\n      dispatch(menuChangeNavClasses({}));\n      dispatch(menuChangeAttrMobile(false));\n    }\n    // Prevents menu animation to make a fast switch\n    if (behaviourStatus.status === 1) {\n      dispatch(menuChangeCollapseAll(true));\n      dispatch(menuChangePinButtonEnable(true));\n    } else if (behaviourStatus.status === 2) {\n      dispatch(menuChangeCollapseAll(true));\n      dispatch(menuChangePinButtonEnable(false));\n    } else if (behaviourStatus.status === 3) {\n      dispatch(menuChangePinButtonEnable(true));\n      dispatch(menuChangeCollapseAll(false));\n    } else if (behaviourStatus.status === 4) {\n      dispatch(menuChangePinButtonEnable(false));\n      dispatch(menuChangeCollapseAll(true));\n    } else if (behaviourStatus.status === 5) {\n      dispatch(menuChangeCollapseAll(false));\n      dispatch(menuChangePinButtonEnable(true));\n    } else if (behaviourStatus.status === 6) {\n      dispatch(menuChangeCollapseAll(false));\n      dispatch(menuChangePinButtonEnable(true));\n    }\n    // eslint-disable-next-line\n  }, [behaviourStatus, placementStatus]);\n\n  useEffect(() => {\n    if (placementStatus.placementHtmlData === MENU_PLACEMENT.Vertical && behaviourStatus.behaviourHtmlData === MENU_BEHAVIOUR.Unpinned && attrMobile !== true) {\n      dispatch(menuChangeCollapseAll(true));\n      dispatch(menuChangeAttrMenuAnimate('hidden'));\n    }\n    return () => {};\n    // eslint-disable-next-line\n  }, [attrMobile]);\n\n  useEffect(() => {\n    if (placementStatus.placementHtmlData === MENU_PLACEMENT.Horizontal && !attrMobile && behaviourStatus.behaviourHtmlData === MENU_BEHAVIOUR.Unpinned) {\n      if (scrolled) {\n        dispatch(menuChangeAttrMenuAnimate('hidden'));\n        // Hiding all dropdowns to make sure they are closed when menu collapses\n        document.documentElement.click();\n      } else {\n        dispatch(menuChangeAttrMenuAnimate(''));\n      }\n    }\n    return () => {};\n    // eslint-disable-next-line\n  }, [scrolled]);\n\n  const getMenuStatus = useCallback(\n    (pBreakpoints, pPlacement, pBehaviour) => {\n      if (pBreakpoints) {\n        const placementStatusCB = checkPlacement({ placement: pPlacement, breakpoints: pBreakpoints });\n        const behaviourStatusCB = checkBehaviour({ placement: placementStatusCB.placementHtmlData, behaviour: pBehaviour, breakpoints: pBreakpoints });\n\n        if (isDeeplyDiffPlacementStatus(placementStatusCB, placementStatus)) {\n          dispatch(menuChangePlacementStatus(placementStatusCB));\n        }\n        if (isDeeplyDiffBehaviourStatus(behaviourStatusCB, behaviourStatus)) {\n          dispatch(menuChangeBehaviourStatus(behaviourStatusCB));\n        }\n      }\n      // eslint-disable-next-line\n  }, [behaviourStatus,placementStatus,breakpoints]);\n\n  useEffect(() => {\n    if (width && placement && behaviour && breakpoints) {\n      getMenuStatus(breakpoints, placement, behaviour);\n    }\n    // eslint-disable-next-line\n  }, [width, breakpoints, placement, behaviour]);\n\n  // Initializes the horizontal menu\n  // Customizes dropdown clicks to prevent auto closing and making sure all sub menus are closed when parent is closed\n  if (menuItemsMemo) {\n    if (placementStatus.view === MENU_PLACEMENT.Horizontal) {\n      return (\n        <div className=\"menu-container flex-grow-1\">\n          <ul id=\"menu\" className={classNames('menu show')}>\n            <MainMenuItems menuItems={menuItemsMemo} menuPlacement={placementStatus.view} />\n          </ul>\n        </div>\n      );\n    }\n    // Vertical menu scrollbar init\n    return (\n      <OverlayScrollbarsComponent\n        options={{\n          scrollbars: { autoHide: 'leave', autoHideDelay: 600 },\n          overflowBehavior: { x: 'hidden', y: 'scroll' },\n        }}\n        className=\"menu-container flex-grow-1\"\n      >\n        <ul id=\"menu\" className={classNames('menu show')}>\n          <MainMenuItems menuItems={menuItemsMemo} menuPlacement={placementStatus.view} />\n        </ul>\n      </OverlayScrollbarsComponent>\n    );\n  }\n  return <></>;\n};\n\nexport default React.memo(MainMenu);\n","import { useState, useEffect } from 'react';\n\nexport const useWindowScroll = () => {\n  const [scrolled, setScrolled] = useState(false);\n  const offset = 80;\n  let windowScrolled = false;\n  let prevScrollPos = window.pageYOffset;\n\n  const handleLoad = () => {\n    prevScrollPos = window.pageYOffset;\n  };\n  const handleScroll = () => {\n    windowScrolled = true;\n  };\n  // Horizontal menu hiding and showing based on menu behaviour and scroll position\n  const onWindowScrollInterval = () => {\n    if (windowScrolled) {\n      const currentScrollPos = window.pageYOffset;\n      windowScrolled = false;\n\n      if (Math.abs(prevScrollPos - currentScrollPos) <= offset && currentScrollPos > offset) {\n        prevScrollPos = currentScrollPos;\n        return;\n      }\n\n      if (prevScrollPos > currentScrollPos || currentScrollPos <= offset) {\n        setScrolled(false);\n      } else if (prevScrollPos <= currentScrollPos && currentScrollPos > offset) {\n        setScrolled(true);\n      }\n      prevScrollPos = currentScrollPos;\n    }\n  };\n  useEffect(() => {\n    const intervalId = setInterval(onWindowScrollInterval, 200);\n\n    window.addEventListener('load', handleLoad);\n    window.addEventListener('scroll', handleScroll);\n\n    return () => {\n      clearInterval(intervalId);\n      window.removeEventListener('scroll', handleScroll);\n      window.removeEventListener('load', handleLoad);\n    };\n    // eslint-disable-next-line\n  }, []);\n\n  return scrolled;\n};\n","import { useState, useEffect } from 'react';\n\nexport const useWindowSize = () => {\n  const [windowSize, setWindowSize] = useState({\n    width: undefined,\n    height: undefined,\n  });\n\n  useEffect(() => {\n    let resizeTimer = -1;\n    function handleResize() {\n      clearTimeout(resizeTimer);\n      resizeTimer = setTimeout(() => {\n        setWindowSize({ width: window.innerWidth, height: window.innerHeight });\n      }, 50);\n    }\n    window.addEventListener('resize', handleResize);\n    handleResize();\n\n    return () => {\n      clearTimeout(resizeTimer);\n      window.removeEventListener('resize', handleResize);\n    };\n  }, []);\n  return windowSize;\n};\n","import { DIMENSION, MENU_BEHAVIOUR, MENU_PLACEMENT } from 'constants.js';\n// Decides which type of menu to add based on the parameters or the current window size.\n// placementStatus:\n// 1 {selected: 'horizontal',  dimension: 'mobile',         html-data: 'horizontal', view: 'vertical'}\n// 2 {selected: 'horizontal',  dimension: 'tablet|desktop', html-data: 'horizontal', view: 'horizontal'}\n// 3 {selected: 'vertical',    dimension: 'mobile',         html-data: 'horizontal', view: 'vertical' }\n// 4 {selected: 'vertical',    dimension: 'tablet|desktop', html-data: 'vertical',   view: 'vertical' }\n\nexport const checkPlacement = ({ placement, breakpoints }) => {\n  const windowWidth = window.innerWidth;\n  if (placement === MENU_PLACEMENT.Horizontal) {\n    // Adding vertical menu for mobile\n    if (breakpoints.horizontalMobile > windowWidth) {\n      return {\n        status: 1,\n        placementHtmlData: MENU_PLACEMENT.Horizontal,\n        dimensionHtmlData: DIMENSION.Mobile,\n        view: MENU_PLACEMENT.Vertical,\n      };\n    }\n    // Adding horizontal menu for desktop\n    return {\n      status: 2,\n      placementHtmlData: MENU_PLACEMENT.Horizontal,\n      dimensionHtmlData: DIMENSION.Desktop,\n      view: MENU_PLACEMENT.Horizontal,\n    };\n  }\n\n  if (placement === MENU_PLACEMENT.Vertical) {\n    // Adding vertical menu for mobile\n    if (breakpoints.verticalMobile > windowWidth) {\n      return {\n        status: 3,\n        placementHtmlData: MENU_PLACEMENT.Horizontal,\n        dimensionHtmlData: DIMENSION.Mobile,\n        view: MENU_PLACEMENT.Vertical,\n      };\n    }\n    // Adding vertical menu for desktop\n    return {\n      status: 4,\n      placementHtmlData: MENU_PLACEMENT.Vertical,\n      dimensionHtmlData: DIMENSION.Desktop,\n      view: MENU_PLACEMENT.Vertical,\n    };\n  }\n  return { status: 0, placementHtmlData: '', dimensionHtmlData: '', view: '' };\n};\n\n// Decides which type of menu behaviour to init based on the parameters or the current window size.\n//  behaviourStatus:\n//  1 {selected: 'unpinned', placement: 'vertical',   dimension: 'mobile|desktop',  html-data: 'unpinned'}\n//  2 {selected: 'unpinned', placement: 'vertical',   dimension: 'tablet',          html-data: 'unpinned'}\n//  3 {selected: 'pinned',   placement: 'vertical',   dimension: 'mobile|desktop',  html-data: 'pinned'}\n//  4 {selected: 'pinned',   placement: 'vertical',   dimension: 'tablet',          html-data: 'unpinned'}\n//  5 {selected: 'unpinned', placement: 'horizontal', dimension: 'all',             html-data: 'unpinned'}\n//  6 {selected: 'pinned',   placement: 'horizontal', dimension: 'all',             html-data: 'pinned'}\nexport const checkBehaviour = ({ placement, behaviour, breakpoints }) => {\n  const windowWidth = window.innerWidth;\n  // Vertical rules\n  if (placement === MENU_PLACEMENT.Vertical && behaviour === MENU_BEHAVIOUR.Unpinned) {\n    // Mobile and Desktop\n    if (breakpoints.verticalMobile > windowWidth || breakpoints.verticalUnpinned <= windowWidth) {\n      return {\n        status: 1,\n        // A small fix to make sure nav config at Vertical No Semi Hidden overrides theme settings.\n        behaviourHtmlData: breakpoints.verticalUnpinned !== breakpoints.verticalMobile ? MENU_BEHAVIOUR.Unpinned : MENU_BEHAVIOUR.Pinned,\n      };\n    }\n    // Tablet\n    return {\n      status: 2,\n      behaviourHtmlData: MENU_BEHAVIOUR.Unpinned,\n    };\n  }\n  if (placement === MENU_PLACEMENT.Vertical && behaviour === MENU_BEHAVIOUR.Pinned) {\n    // Mobile and Desktop\n    if (breakpoints.verticalMobile > windowWidth || breakpoints.verticalUnpinned <= windowWidth) {\n      return {\n        status: 3,\n        behaviourHtmlData: MENU_BEHAVIOUR.Pinned,\n      };\n    }\n    // Tablet\n    return {\n      status: 4,\n      behaviourHtmlData: MENU_BEHAVIOUR.Unpinned,\n    };\n  }\n\n  // Horizontal rules\n  if (placement === MENU_PLACEMENT.Horizontal && behaviour === MENU_BEHAVIOUR.Unpinned) {\n    return {\n      status: 5,\n      behaviourHtmlData: MENU_BEHAVIOUR.Unpinned,\n    };\n  }\n  if (placement === MENU_PLACEMENT.Horizontal && behaviour === MENU_BEHAVIOUR.Pinned) {\n    return {\n      status: 6,\n      behaviourHtmlData: MENU_BEHAVIOUR.Pinned,\n    };\n  }\n  return { status: 0, behaviourHtmlData: '' };\n};\n\n// Using popperjs to align user,language and notification dropdowns in the menu\nexport const dropdownPositionFixInMenu = ({ style, placement, isMobile }) => {\n  let xPlacement = 'bottom-end';\n  let { transform } = style;\n  if ((placement === MENU_PLACEMENT.Vertical || isMobile) && style && style.transform) {\n    transform = style.transform.replace(/(\\d+)px/, '15px');\n    if (window.innerHeight <= 450) {\n      // transform = transform.replace(/, (\\d+)px/, ', 15px');\n      xPlacement = 'top-end';\n    }\n  }\n  return { xPlacement, transform };\n};\n\nexport const isDeeplyDiffPlacementStatus = (a, b) => {\n  if (a.status !== b.status) return true;\n  if (a.placementHtmlData !== b.placementHtmlData) return true;\n  if (a.dimensionHtmlData !== b.dimensionHtmlData) return true;\n  // noinspection RedundantIfStatementJS\n  if (a.view !== b.view) return true;\n  return false;\n};\nexport const isDeeplyDiffBehaviourStatus = (a, b) => {\n  if (a.status !== b.status) return true;\n  // noinspection RedundantIfStatementJS\n  if (a.behaviourHtmlData !== b.behaviourHtmlData) return true;\n  return false;\n};\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { DEFAULT_PATHS } from 'config.js';\n\nconst NavLogo = () => {\n  return (\n    <div className=\"logo position-relative\">\n      <Link to={DEFAULT_PATHS.APP}>\n        {/*\n          Logo can be added directly\n          <img src=\"/img/logo/logo-white.svg\" alt=\"logo\" />\n          Or added via css to provide different ones for different color themes\n         */}\n        <div className=\"img\" />\n      </Link>\n    </div>\n  );\n};\nexport default React.memo(NavLogo);\n","import React from 'react';\nimport CsLineIcons from 'cs-line-icons/CsLineIcons';\n\nconst ScrollspyContent = React.memo(({ items }) => (\n  <ul className=\"nav flex-column\">\n    {items.map((item, index) => (\n      <li key={index}>\n        <a className=\"nav-link\" href={`#${item.id}`}>\n          <CsLineIcons icon=\"chevron-right\" />\n          <span className=\"align-middle\">{item.text}</span>\n        </a>\n        {item.subs && (\n          <ul className=\"nav flex-column\">\n            {item.subs.map((sub, subIndex) => (\n              <li key={subIndex}>\n                <a className=\"nav-link\" href={`#${sub.id}`}>\n                  {sub.text}\n                </a>\n              </li>\n            ))}\n          </ul>\n        )}\n      </li>\n    ))}\n  </ul>\n));\nScrollspyContent.displayName = 'ScrollspyContent';\n\nexport default ScrollspyContent;\n","import React from 'react';\nimport { Dropdown } from 'react-bootstrap';\nimport CsLineIcons from 'cs-line-icons/CsLineIcons';\nimport ScrollspyContent from './ScrollspyContent';\n\nconst ScrollspyToggle = React.forwardRef(({ children, onClick }, ref) => (\n  <a\n    href=\"#/!\"\n    ref={ref}\n    className=\"spy-button text-white\"\n    onClick={(e) => {\n      e.preventDefault();\n      onClick(e);\n    }}\n  >\n    {children}\n  </a>\n));\nScrollspyToggle.displayName = 'ScrollspyToggle';\n\nconst ScrollspyMobile = ({ items = [] }) => {\n  if (items === null || items.length <= 0) {\n    return <></>;\n  }\n\n  return (\n    <>\n      <Dropdown>\n        <Dropdown.Toggle as={ScrollspyToggle}>\n          <CsLineIcons icon=\"menu-dropdown\" />\n        </Dropdown.Toggle>\n        <Dropdown.Menu\n          as=\"ul\"\n          className=\"dropdown-menu-end\"\n          popperConfig={{\n            modifiers: [\n              {\n                name: 'offset',\n                options: {\n                  offset: [0, 5],\n                },\n              },\n            ],\n          }}\n        >\n          <ScrollspyContent items={items} />\n        </Dropdown.Menu>\n      </Dropdown>\n    </>\n  );\n};\nexport default React.memo(ScrollspyMobile);\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CsLineIcons from 'cs-line-icons/CsLineIcons';\nimport ScrollspyMobile from 'components/scrollspy/ScrollspyMobile';\nimport { menuChangeAttrMobile, menuChangeNavClasses } from './main-menu/menuSlice';\n\nconst NavMobileButtons = () => {\n  const dispatch = useDispatch();\n  const { navClasses } = useSelector((state) => state.menu);\n  const { items: scrollspyItems } = useSelector((state) => state.scrollspy);\n\n  // Starts mobile menu opening sequence\n  const showMobileMenu = (e) => {\n    e.preventDefault();\n    dispatch(menuChangeAttrMobile(true));\n    let newNavClasses = {\n      ...navClasses,\n      'mobile-top-out': true,\n      'mobile-top-in': false,\n      'mobile-top-ready': false,\n    };\n    dispatch(menuChangeNavClasses(newNavClasses));\n    setTimeout(() => {\n      newNavClasses = {\n        ...newNavClasses,\n        'mobile-top-out': false,\n        'mobile-side-ready': true,\n      };\n      dispatch(menuChangeNavClasses(newNavClasses));\n    }, 200);\n    setTimeout(() => {\n      newNavClasses = {\n        ...newNavClasses,\n        'mobile-side-in': true,\n      };\n      dispatch(menuChangeNavClasses(newNavClasses));\n    }, 230);\n  };\n\n  // Starts mobile menu closing sequence\n  const hideMobileMenu = () => {\n    let newNavClasses = {\n      ...navClasses,\n      'mobile-side-out': true,\n      'mobile-side-ready': true,\n      'mobile-side-in': false,\n    };\n    dispatch(menuChangeNavClasses(newNavClasses));\n    setTimeout(() => {\n      newNavClasses = {\n        ...newNavClasses,\n        'mobile-side-ready': false,\n        'mobile-side-out': false,\n        'mobile-top-ready': true,\n      };\n      dispatch(menuChangeNavClasses(newNavClasses));\n    }, 200);\n    setTimeout(() => {\n      newNavClasses = {\n        ...newNavClasses,\n        'mobile-top-in': true,\n        'mobile-top-ready': true,\n      };\n      dispatch(menuChangeNavClasses(newNavClasses));\n      dispatch(menuChangeAttrMobile(false));\n    }, 230);\n  };\n\n  useEffect(() => {\n    if (navClasses && navClasses['mobile-side-in']) {\n      window.addEventListener('click', hideMobileMenu);\n    }\n    return () => {\n      window.removeEventListener('click', hideMobileMenu);\n    };\n    // eslint-disable-next-line\n  }, [navClasses]);\n\n  return (\n    <div className=\"mobile-buttons-container\">\n      {scrollspyItems && scrollspyItems.length > 0 && <ScrollspyMobile items={scrollspyItems} />}\n      <a href=\"#/\" id=\"mobileMenuButton\" className=\"menu-button\" onClick={showMobileMenu}>\n        <CsLineIcons icon=\"menu\" />\n      </a>\n    </div>\n  );\n};\nexport default React.memo(NavMobileButtons);\n","import React, { useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\n\nimport { MENU_BEHAVIOUR, MENU_PLACEMENT } from 'constants.js';\nimport NavUserMenu from './NavUserMenu';\nimport NavIconMenu from './NavIconMenu';\nimport MainMenu from './main-menu/MainMenu';\nimport NavLogo from './NavLogo';\nimport NavMobileButtons from './NavMobileButtons';\nimport { menuChangeAttrMenuAnimate, menuChangeCollapseAll } from './main-menu/menuSlice';\n\nconst DELAY = 80;\n\nconst Nav = () => {\n  const dispatch = useDispatch();\n  const { navClasses, placementStatus, behaviourStatus, attrMobile, menuPadding } = useSelector((state) => state.menu);\n  const mouseActionTimer = useRef(null);\n\n  // Vertical menu semihidden state showing\n  // Only works when the vertical menu is active and mobile menu closed\n  const onMouseEnterDelay = () => {\n    if (placementStatus.placementHtmlData === MENU_PLACEMENT.Vertical && behaviourStatus.behaviourHtmlData === MENU_BEHAVIOUR.Unpinned && attrMobile !== true) {\n      dispatch(menuChangeCollapseAll(false));\n      dispatch(menuChangeAttrMenuAnimate('show'));\n    }\n  };\n\n  // Delayed one that hides or shows the menu. It's required to prevent collapse animation getting stucked\n  const onMouseEnter = () => {\n    if (mouseActionTimer.current) clearTimeout(mouseActionTimer.current);\n\n    mouseActionTimer.current = setTimeout(() => {\n      onMouseEnterDelay();\n    }, DELAY);\n  };\n\n  // Vertical menu semihidden state hiding\n  // Only works when the vertical menu is active and mobile menu closed\n  const onMouseLeaveDelay = () => {\n    if (placementStatus.placementHtmlData === MENU_PLACEMENT.Vertical && behaviourStatus.behaviourHtmlData === MENU_BEHAVIOUR.Unpinned && attrMobile !== true) {\n      dispatch(menuChangeCollapseAll(true));\n      dispatch(menuChangeAttrMenuAnimate('hidden'));\n    }\n  };\n\n  const onMouseLeave = () => {\n    if (mouseActionTimer.current) clearTimeout(mouseActionTimer.current);\n    mouseActionTimer.current = setTimeout(() => {\n      onMouseLeaveDelay();\n    }, DELAY);\n  };\n\n  return (\n    <div id=\"nav\" className={classNames('nav-container d-flex', navClasses)} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n      <div\n        className=\"nav-content d-flex\"\n        style={placementStatus.placementHtmlData === MENU_PLACEMENT.Horizontal && menuPadding ? { paddingRight: menuPadding } : {}}\n      >\n        <NavLogo />\n        <NavUserMenu />\n        <NavIconMenu />\n        <MainMenu />\n        <NavMobileButtons />\n      </div>\n      <div className=\"nav-shadow\" />\n    </div>\n  );\n};\nexport default React.memo(Nav);\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classNames from 'classnames';\nimport { Card, Figure, Modal } from 'react-bootstrap';\n\nimport { OverlayScrollbarsComponent } from 'overlayscrollbars-react';\nimport { LAYOUT, MENU_BEHAVIOUR, MENU_PLACEMENT, NAV_COLOR, RADIUS, THEME_COLOR } from 'constants.js';\nimport { menuChangeBehaviour, menuChangePlacement } from 'layout/nav/main-menu/menuSlice';\nimport { settingsChangeColor, settingsChangeLayout, settingsChangeNavColor, settingsChangeRadius } from 'settings/settingsSlice';\n\nconst OptionGroup = ({ label = '', children, noContainer = false }) => (\n  <div className=\"mb-5\">\n    <label className=\"mb-3 d-inline-block\">{label}</label>\n    {noContainer ? children : <div className=\"row d-flex g-3 justify-content-between flex-wrap mb-3\">{children}</div>}\n  </div>\n);\nconst OptionItem = ({ label = '', className = 'w-50', active = false, onClick = () => {}, children }) => (\n  <div onClick={onClick} className={classNames('cursor-pointer flex-grow-1 option col', className, { active })}>\n    {children}\n    <div className=\"text-muted text-part\">\n      <span className=\"text-extra-small align-middle\">{label}</span>\n    </div>\n  </div>\n);\n\nconst SettingsModal = ({ handleClose, show = false }) => {\n  const dispatch = useDispatch();\n  const { color, layout, radius, navColor } = useSelector((state) => state.settings);\n  const { behaviour, placement } = useSelector((state) => state.menu);\n\n  const handleChange = (action, payload) => {\n    dispatch(action(payload));\n  };\n\n  return (\n    <>\n      <Modal\n        show={show}\n        id=\"settings\"\n        onHide={handleClose}\n        className=\"modal-right scroll-out-negative\"\n        dialogClassName=\"full\"\n        aria-labelledby=\"settings\"\n        tabIndex=\"-1\"\n        scrollable\n      >\n        <Modal.Header>\n          <Modal.Title as=\"h5\">Theme Settings</Modal.Title>\n          <button type=\"button\" className=\"btn-close\" onClick={handleClose} />\n        </Modal.Header>\n        <Modal.Body>\n          <OverlayScrollbarsComponent options={{ overflowBehavior: { x: 'hidden', y: 'scroll' } }} className=\"scroll-track-visible\">\n            <OptionGroup label=\"Color\" noContainer>\n              <>\n                <div className=\"row d-flex g-3 justify-content-between flex-wrap mb-3\">\n                  <OptionItem\n                    label=\"LIGHT BLUE\"\n                    active={color === THEME_COLOR.LightBlue}\n                    onClick={() => handleChange(settingsChangeColor, THEME_COLOR.LightBlue)}\n                  >\n                    <Card className=\"rounded-md p-3 mb-1 no-shadow color\">\n                      <div className=\"blue-light\" />\n                    </Card>\n                  </OptionItem>\n                  <OptionItem label=\"DARK BLUE\" active={color === THEME_COLOR.DarkBlue} onClick={() => handleChange(settingsChangeColor, THEME_COLOR.DarkBlue)}>\n                    <Card className=\"rounded-md p-3 mb-1 no-shadow color\">\n                      <div className=\"blue-dark\" />\n                    </Card>\n                  </OptionItem>\n                </div>\n                <div className=\"row d-flex g-3 justify-content-between flex-wrap mb-3\">\n                  <OptionItem\n                    label=\"LIGHT GREEN\"\n                    active={color === THEME_COLOR.LightGreen}\n                    onClick={() => handleChange(settingsChangeColor, THEME_COLOR.LightGreen)}\n                  >\n                    <Card className=\"rounded-md p-3 mb-1 no-shadow color\">\n                      <div className=\"green-light\" />\n                    </Card>\n                  </OptionItem>\n                  <OptionItem\n                    label=\"DARK GREEN\"\n                    active={color === THEME_COLOR.DarkGreen}\n                    onClick={() => handleChange(settingsChangeColor, THEME_COLOR.DarkGreen)}\n                  >\n                    <Card className=\"rounded-md p-3 mb-1 no-shadow color\">\n                      <div className=\"green-dark\" />\n                    </Card>\n                  </OptionItem>\n                </div>\n                <div className=\"row d-flex g-3 justify-content-between flex-wrap mb-3\">\n                  <OptionItem\n                    label=\"LIGHT PINK\"\n                    active={color === THEME_COLOR.LightPink}\n                    onClick={() => handleChange(settingsChangeColor, THEME_COLOR.LightPink)}\n                  >\n                    <Card className=\"rounded-md p-3 mb-1 no-shadow color\">\n                      <div className=\"pink-light\" />\n                    </Card>\n                  </OptionItem>\n                  <OptionItem label=\"DARK PINK\" active={color === THEME_COLOR.DarkPink} onClick={() => handleChange(settingsChangeColor, THEME_COLOR.DarkPink)}>\n                    <Card className=\"rounded-md p-3 mb-1 no-shadow color\">\n                      <div className=\"pink-dark\" />\n                    </Card>\n                  </OptionItem>\n                </div>\n                <div className=\"row d-flex g-3 justify-content-between flex-wrap mb-3\">\n                  <OptionItem\n                    label=\"LIGHT PURPLE\"\n                    className=\"w-50\"\n                    active={color === THEME_COLOR.LightPurple}\n                    onClick={() => handleChange(settingsChangeColor, THEME_COLOR.LightPurple)}\n                  >\n                    <Card className=\"rounded-md p-3 mb-1 no-shadow color\">\n                      <div className=\"purple-light\" />\n                    </Card>\n                  </OptionItem>\n                  <OptionItem\n                    label=\"DARK PURPLE\"\n                    active={color === THEME_COLOR.DarkPurple}\n                    onClick={() => handleChange(settingsChangeColor, THEME_COLOR.DarkPurple)}\n                  >\n                    <Card className=\"rounded-md p-3 mb-1 no-shadow color\">\n                      <div className=\"purple-dark\" />\n                    </Card>\n                  </OptionItem>\n                </div>\n                <div className=\"row d-flex g-3 justify-content-between flex-wrap mb-3\">\n                  <OptionItem label=\"LIGHT RED\" active={color === THEME_COLOR.LightRed} onClick={() => handleChange(settingsChangeColor, THEME_COLOR.LightRed)}>\n                    <Card className=\"rounded-md p-3 mb-1 no-shadow color\">\n                      <div className=\"red-light\" />\n                    </Card>\n                  </OptionItem>\n                  <OptionItem label=\"DARK RED\" active={color === THEME_COLOR.DarkRed} onClick={() => handleChange(settingsChangeColor, THEME_COLOR.DarkRed)}>\n                    <Card className=\"rounded-md p-3 mb-1 no-shadow color\">\n                      <div className=\"red-dark\" />\n                    </Card>\n                  </OptionItem>\n                </div>\n              </>\n            </OptionGroup>\n            <OptionGroup label=\"Override Nav Palette\">\n              <>\n                <OptionItem\n                  label=\"DEFAULT\"\n                  className=\"w-33\"\n                  active={navColor === NAV_COLOR.Default}\n                  onClick={() => handleChange(settingsChangeNavColor, NAV_COLOR.Default)}\n                >\n                  <Card className=\"rounded-md p-3 mb-1 no-shadow\">\n                    <Figure className=\"figure-primary top\" />\n                    <Figure className=\"figure-secondary bottom\" />\n                  </Card>\n                </OptionItem>\n                <OptionItem\n                  label=\"LIGHT\"\n                  className=\"w-33\"\n                  active={navColor === NAV_COLOR.Light}\n                  onClick={() => handleChange(settingsChangeNavColor, NAV_COLOR.Light)}\n                >\n                  <Card className=\"rounded-md p-3 mb-1 no-shadow\">\n                    <Figure className=\"figure-primary figure-light top\" />\n                    <Figure className=\"figure-secondary bottom\" />\n                  </Card>\n                </OptionItem>\n                <OptionItem\n                  label=\"DARK\"\n                  className=\"w-33\"\n                  active={navColor === NAV_COLOR.Dark}\n                  onClick={() => handleChange(settingsChangeNavColor, NAV_COLOR.Dark)}\n                >\n                  <Card className=\"rounded-md p-3 mb-1 no-shadow\">\n                    <Figure className=\"figure-primary figure-dark top\" />\n                    <Figure className=\"figure-secondary bottom\" />\n                  </Card>\n                </OptionItem>\n              </>\n            </OptionGroup>\n            <OptionGroup label=\"Menu Placement\">\n              <>\n                <OptionItem\n                  label=\"HORIZONTAL\"\n                  active={placement === MENU_PLACEMENT.Horizontal}\n                  onClick={() => handleChange(menuChangePlacement, MENU_PLACEMENT.Horizontal)}\n                >\n                  <Card className=\"rounded-md p-3 mb-1 no-shadow\">\n                    <Figure className=\"figure-primary top\" />\n                    <Figure className=\"figure-secondary bottom\" />\n                  </Card>\n                </OptionItem>\n                <OptionItem\n                  label=\"VERTICAL\"\n                  active={placement === MENU_PLACEMENT.Vertical}\n                  onClick={() => handleChange(menuChangePlacement, MENU_PLACEMENT.Vertical)}\n                >\n                  <Card className=\"rounded-md p-3 mb-1 no-shadow\">\n                    <Figure className=\"figure-primary left\" />\n                    <Figure className=\"figure-secondary right\" />\n                  </Card>\n                </OptionItem>\n              </>\n            </OptionGroup>\n            <OptionGroup label=\"Menu Behaviour\">\n              <>\n                <OptionItem\n                  label=\"PINNED\"\n                  active={behaviour === MENU_BEHAVIOUR.Pinned}\n                  onClick={() => handleChange(menuChangeBehaviour, MENU_BEHAVIOUR.Pinned)}\n                >\n                  <Card className=\"rounded-md p-3 mb-1 no-shadow\">\n                    <Figure className=\"figure-primary left large\" />\n                    <Figure className=\"figure-secondary right small\" />\n                  </Card>\n                </OptionItem>\n                <OptionItem\n                  label=\"UNPINNED\"\n                  active={behaviour === MENU_BEHAVIOUR.Unpinned}\n                  onClick={() => handleChange(menuChangeBehaviour, MENU_BEHAVIOUR.Unpinned)}\n                >\n                  <Card className=\"rounded-md p-3 mb-1 no-shadow\">\n                    <Figure className=\"figure-primary left\" />\n                    <Figure className=\"figure-secondary right\" />\n                  </Card>\n                </OptionItem>\n              </>\n            </OptionGroup>\n            <OptionGroup label=\"Layout\">\n              <>\n                <OptionItem label=\"FLUID\" active={layout === LAYOUT.Fluid} onClick={() => handleChange(settingsChangeLayout, LAYOUT.Fluid)}>\n                  <Card className=\"rounded-md p-3 mb-1 no-shadow\">\n                    <Figure className=\"figure-primary top\" />\n                    <Figure className=\"figure-secondary bottom\" />\n                  </Card>\n                </OptionItem>\n                <OptionItem label=\"BOXED\" active={layout === LAYOUT.Boxed} onClick={() => handleChange(settingsChangeLayout, LAYOUT.Boxed)}>\n                  <Card className=\"rounded-md p-3 mb-1 no-shadow\">\n                    <Figure className=\"figure-primary top\" />\n                    <Figure className=\"figure-secondary bottom small\" />\n                  </Card>\n                </OptionItem>\n              </>\n            </OptionGroup>\n            <OptionGroup label=\"Radius\">\n              <>\n                <OptionItem\n                  label=\"ROUNDED\"\n                  className=\"w-33\"\n                  active={radius === RADIUS.Rounded}\n                  onClick={() => handleChange(settingsChangeRadius, RADIUS.Rounded)}\n                >\n                  <Card className=\"radius-rounded rounded-md p-3 mb-1 no-shadow\">\n                    <Figure className=\"figure-primary top\" />\n                    <Figure className=\"figure-secondary bottom\" />\n                  </Card>\n                </OptionItem>\n                <OptionItem\n                  label=\"STANDARD\"\n                  className=\"w-33\"\n                  active={radius === RADIUS.Standard}\n                  onClick={() => handleChange(settingsChangeRadius, RADIUS.Standard)}\n                >\n                  <Card className=\"radius-regular rounded-md p-3 mb-1 no-shadow\">\n                    <Figure className=\"figure-primary top\" />\n                    <Figure className=\"figure-secondary bottom\" />\n                  </Card>\n                </OptionItem>\n                <OptionItem label=\"FLAT\" active={radius === RADIUS.Flat} onClick={() => handleChange(settingsChangeRadius, RADIUS.Flat)}>\n                  <Card className=\"radius-flat rounded-md p-3 mb-1 no-shadow\">\n                    <Figure className=\"figure-primary top\" />\n                    <Figure className=\"figure-secondary bottom\" />\n                  </Card>\n                </OptionItem>\n              </>\n            </OptionGroup>\n          </OverlayScrollbarsComponent>\n        </Modal.Body>\n      </Modal>\n    </>\n  );\n};\n\nexport default SettingsModal;\n","/* Theme Settings & Niches Buttons */\nimport React, { useState } from 'react';\nimport { Button, OverlayTrigger, Tooltip } from 'react-bootstrap';\nimport CsLineIcons from 'cs-line-icons/CsLineIcons';\nimport SettingsModal from './SettingsModal';\n\nconst RightButtons = () => {\n  const [isShowSettingsModal, setIsShowSettingsModal] = useState(false);\n  const showSettingsModal = () => {\n    setIsShowSettingsModal(true);\n  };\n  const closeSettingsModal = () => {\n    setIsShowSettingsModal(false);\n    document.documentElement.click();\n  };\n\n  return (\n    <>\n      <div className=\"settings-buttons-container\">\n        <OverlayTrigger delay={{ show: 1000, hide: 0 }} overlay={<Tooltip>Setting Layout</Tooltip>} placement=\"left\">\n          <Button variant=\"primary\" className=\"settings-button p-0\" onClick={showSettingsModal}>\n            <span>\n              <CsLineIcons icon=\"paint-roller\" className=\"position-relative\" />\n            </span>\n          </Button>\n        </OverlayTrigger>\n        <OverlayTrigger delay={{ show: 1000, hide: 0 }} overlay={<Tooltip>GAM Dashboard</Tooltip>} placement=\"left\">\n          <Button\n            variant=\"primary\"\n            href=\"https://admanager.google.com/home/\"\n            rel=\"noreferrer\"\n            target=\"_blank\"\n            className=\"settings-button p-0\"\n          >\n            <span>\n              <CsLineIcons icon=\"eye\" className=\"position-relative\" />\n            </span>\n          </Button>\n        </OverlayTrigger>\n      </div>\n      <SettingsModal show={isShowSettingsModal} handleClose={closeSettingsModal} />\n    </>\n  );\n};\nexport default RightButtons;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport CsLineIcons from 'cs-line-icons/CsLineIcons';\n\nconst SidebarMenuItems = React.memo(({ menuItems = [] }) =>\n  menuItems.map((item, index) => <SidebarMenuItem key={`menu.${item.path}.${index}`} id={item.path} item={item} />)\n);\nSidebarMenuItems.displayName = 'SidebarMenuItems';\n\nconst SidebarMenuItem = ({ item, id }) => {\n  const { pathname } = useLocation();\n\n  const isActive = item.path.startsWith('#') ? false : pathname === item.path || pathname.indexOf(`${item.path}/`) > -1;\n\n  const getLabel = (icon, label) => (\n    <>\n      {icon && (\n        <>\n          <CsLineIcons icon={icon} className=\"cs-icon icon\" />{' '}\n        </>\n      )}\n      <span className=\"label\">{label}</span>\n    </>\n  );\n\n  if (item.subs) {\n    return (\n      <li>\n        <NavLink to={item.path} className={classNames({ active: isActive })} data-bs-target={item.path}>\n          {getLabel(item.icon, item.label)}\n        </NavLink>\n        <ul>\n          <SidebarMenuItems menuItems={item.subs} />\n        </ul>\n      </li>\n    );\n  }\n  if (item.isExternal) {\n    return (\n      <li key={id}>\n        <a href={item.path} target=\"_blank\" rel=\"noopener noreferrer\">\n          {getLabel(item.icon, item.label)}\n        </a>\n      </li>\n    );\n  }\n  return (\n    <li>\n      <NavLink to={item.path} className={classNames({ active: isActive })} activeClassName=\"\">\n        {getLabel(item.icon, item.label)}\n      </NavLink>\n    </li>\n  );\n};\n\nexport default SidebarMenuItems;\n","import React, { useMemo } from 'react';\nimport { Col } from 'react-bootstrap';\nimport { useSelector } from 'react-redux';\nimport { getMenuItems } from 'routing/helper';\nimport routesAndMenuItems from 'routes.js';\nimport SidebarMenuItems from './SidebarMenuItems';\n\nconst SidebarMenu = () => {\n  const { isLogin, currentUser } = useSelector((state) => state.auth);\n  const { useSidebar } = useSelector((state) => state.menu);\n\n  const menuItemsMemo = useMemo(\n    () =>\n      getMenuItems({\n        data: routesAndMenuItems.sidebarItems,\n        isLogin,\n        userRole: currentUser.role,\n      }),\n    [isLogin, currentUser]\n  );\n\n  if (!useSidebar === true) {\n    return <></>;\n  }\n  return (\n    <Col xs=\"auto\" className=\"side-menu-container\">\n      <ul className=\"sw-25 side-menu mb-0 primary\" id=\"menuSide\">\n        <SidebarMenuItems menuItems={menuItemsMemo} />\n      </ul>\n    </Col>\n  );\n};\nexport default SidebarMenu;\n","import React, { useEffect } from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport { useLocation } from 'react-router-dom';\nimport useLayout from 'hooks/useLayout';\nimport Footer from 'layout/footer/Footer';\nimport Nav from 'layout/nav/Nav';\nimport RightButtons from 'layout/right-buttons/RightButtons';\nimport SidebarMenu from 'layout/nav/sidebar-menu/SidebarMenu';\n\nconst Layout = ({ children }) => {\n  useLayout();\n\n  const { pathname } = useLocation();\n\n  useEffect(() => {\n    document.documentElement.click();\n    window.scrollTo(0, 0);\n    // eslint-disable-next-line\n    }, [pathname]);\n  return (\n    <>\n      <Nav />\n      <main>\n        <Container>\n          <Row className=\"h-100\">\n            <SidebarMenu />\n            <Col className=\"h-100\" id=\"contentArea\">\n              {children}\n            </Col>\n          </Row>\n        </Container>\n      </main>\n      <Footer />\n      <RightButtons />\n    </>\n  );\n};\n\nexport default React.memo(Layout);\n","import React, { useMemo } from 'react';\n\n// import redux for auth guard\nimport { useSelector } from 'react-redux';\n\n// import layout\nimport Layout from 'layout/Layout';\n\n// import routing modules\nimport RouteIdentifier from 'routing/components/RouteIdentifier';\nimport { getRoutes } from 'routing/helper';\nimport routesAndMenuItems from 'routes.js';\nimport Loading from 'components/loading/Loading';\n\nconst App = () => {\n  const { currentUser, isLogin } = useSelector((state) => state.auth);\n\n  const routes = useMemo(() => getRoutes({ data: routesAndMenuItems, isLogin, userRole: currentUser.role }), [isLogin, currentUser]);\n  if (routes) {\n    return (\n      <Layout>\n        <RouteIdentifier routes={routes} fallback={<Loading />} />\n      </Layout>\n    );\n  }\n  return <></>;\n};\n\nexport default App;\n"],"names":["Footer","useEffect","document","documentElement","setAttribute","removeAttribute","className","Container","Row","Col","xs","sm","Breadcrumb","href","linkProps","React","NavUserMenuContent","CsLineIcons","icon","size","NavUserMenuDropdownToggle","ref","onClick","expanded","user","e","preventDefault","stopPropagation","alt","name","src","thumb","NavUserMenuDropdownMenu","style","classNames","displayName","MENU_NAME","NavUserMenu","dispatch","useDispatch","useSelector","state","menu","placement","placementStatus","view","behaviourHtmlData","behaviourStatus","attrMobile","attrMenuAnimate","auth","isLogin","currentUser","color","settings","showingNavMenu","layout","layoutShowingNavMenu","Dropdown","as","bsPrefix","onToggle","status","event","originalEvent","show","drop","popperConfig","modifiers","options","offset","MENU_PLACEMENT","window","innerWidth","NotificationsDropdownToggle","NotificationItem","img","link","detail","to","activeClassName","NotificationsDropdownMenu","labeledBy","items","scrollbars","autoHide","autoHideDelay","overflowBehavior","x","y","map","item","itemIndex","Notifications","notification","fetchNotifications","length","align","setShow","history","useHistory","searchInput","useRef","useState","data","setData","query","setQuery","selectedIndex","setSelectedIndex","resultCount","selectedItem","mySelectedIndexRef","setMySelectedIndex","currenData","current","routes","useMemo","getSearchItems","routesAndMenuItems","userRole","role","onResultClick","path","push","onKeyDown","includes","keyCode","rCount","sIndex","sCurrent","addEventListener","removeEventListener","setTimeout","focus","id","type","autoComplete","onChange","target","value","placeholder","autoFocus","shouldSort","includeMatches","threshold","location","distance","maxPatternLength","minMatchCharLength","keys","formattedResults","results","Math","min","slice","formattedResult","resultIndex","autoComplete_selected","Array","isArray","formatted","label","t","tIndex","isHighlighted","text","Modal","onHide","NavIconMenu","pinButtonEnable","behaviour","showSearchModal","setShowSearchModal","menuChangeBehaviour","MENU_BEHAVIOUR","disabled","settingsChangeColor","replace","HorizontalMenuDropdownToggle","memo","forwardRef","children","active","MainMenuItem","isSubItem","menuPlacement","DEFAULT_SETTINGS","dropdownMenuRef","collapseAll","pathname","useLocation","isActive","startsWith","indexOf","verticalMenuCollapseExpanded","setVerticalMenuCollapseExpanded","horizontalDropdownIsOpen","setHorizontalDropdownIsOpen","getLabel","onToggleItem","isOpen","subs","megaParent","mega","renderOnMount","strategy","gpuAcceleration","adaptive","roundOffsets","round","clientWidth","console","warn","MainMenuItems","menuItems","menuChangeCollapseAll","Collapse","in","isExternal","rel","index","MainMenu","breakpoints","useSidebar","scrolled","setScrolled","windowScrolled","prevScrollPos","pageYOffset","handleLoad","handleScroll","onWindowScrollInterval","currentScrollPos","abs","intervalId","setInterval","clearInterval","useWindowScroll","width","undefined","height","windowSize","setWindowSize","resizeTimer","handleResize","clearTimeout","innerHeight","useWindowSize","menuItemsMemo","getMenuItems","menuChangeAttrMenuAnimate","menuChangeNavClasses","menuChangeAttrMobile","menuChangePinButtonEnable","placementHtmlData","click","getMenuStatus","useCallback","pBreakpoints","pPlacement","pBehaviour","placementStatusCB","windowWidth","horizontalMobile","dimensionHtmlData","DIMENSION","verticalMobile","checkPlacement","behaviourStatusCB","verticalUnpinned","checkBehaviour","b","a","menuChangePlacementStatus","isDeeplyDiffBehaviourStatus","menuChangeBehaviourStatus","NavLogo","DEFAULT_PATHS","ScrollspyContent","sub","subIndex","ScrollspyToggle","ScrollspyMobile","NavMobileButtons","navClasses","scrollspyItems","scrollspy","hideMobileMenu","newNavClasses","Nav","menuPadding","mouseActionTimer","onMouseEnter","onMouseLeave","paddingRight","OptionGroup","noContainer","OptionItem","handleClose","radius","navColor","handleChange","action","payload","dialogClassName","tabIndex","scrollable","THEME_COLOR","Card","NAV_COLOR","settingsChangeNavColor","Figure","menuChangePlacement","LAYOUT","settingsChangeLayout","RADIUS","settingsChangeRadius","isShowSettingsModal","setIsShowSettingsModal","OverlayTrigger","delay","hide","overlay","Tooltip","Button","variant","SidebarMenuItems","SidebarMenuItem","Layout","useLayout","scrollTo","getRoutes","RouteIdentifier","fallback","Loading"],"sourceRoot":""}